{"ast":null,"code":"import React,{useState}from'react';import'./ChatBot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatBot(){const[input,setInput]=useState('');const[messages,setMessages]=useState([{role:'bot',text:\"Hi! I'm your EV Support Bot. Ask me about charging stations.\"}]);const sendMessage=async()=>{if(!input.trim())return;setMessages([...messages,{role:'user',text:input}]);const res=await fetch('/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:input})});const data=await res.json();setMessages(prev=>[...prev,{role:'bot',text:data.reply}]);setInput('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-window\",children:messages.map((m,i)=>/*#__PURE__*/_jsx(\"div\",{className:m.role,children:m.text},i))}),/*#__PURE__*/_jsx(\"input\",{value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key==='Enter'&&sendMessage()})]});}export default ChatBot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ChatBot","input","setInput","messages","setMessages","role","text","sendMessage","trim","res","fetch","method","headers","body","JSON","stringify","message","data","json","prev","reply","className","children","map","m","i","value","onChange","e","target","onKeyDown","key"],"sources":["C:/Users/nanda/ev-support-bot-final/frontend/src/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatBot.css';\n\nfunction ChatBot() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([{ role: 'bot', text: \"Hi! I'm your EV Support Bot. Ask me about charging stations.\" }]);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, { role: 'user', text: input }]);\n\n    const res = await fetch('/api/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: input })\n    });\n\n    const data = await res.json();\n    setMessages(prev => [...prev, { role: 'bot', text: data.reply }]);\n    setInput('');\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <div className=\"chat-window\">\n        {messages.map((m, i) => <div key={i} className={m.role}>{m.text}</div>)}\n      </div>\n      <input value={input} onChange={e => setInput(e.target.value)} onKeyDown={e => e.key === 'Enter' && sendMessage()} />\n    </div>\n  );\n}\n\nexport default ChatBot;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAEU,IAAI,CAAE,KAAK,CAAEC,IAAI,CAAE,8DAA+D,CAAC,CAAC,CAAC,CAEjI,KAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,CAAE,OACnBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEE,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAEL,KAAM,CAAC,CAAC,CAAC,CAEzD,KAAM,CAAAQ,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,WAAW,CAAE,CACnCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAEf,KAAM,CAAC,CACzC,CAAC,CAAC,CAEF,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAC7Bd,WAAW,CAACe,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEd,IAAI,CAAE,KAAK,CAAEC,IAAI,CAAEW,IAAI,CAACG,KAAM,CAAC,CAAC,CAAC,CACjElB,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,mBACEH,KAAA,QAAKsB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBzB,IAAA,QAAKwB,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBAAK5B,IAAA,QAAawB,SAAS,CAAEG,CAAC,CAACnB,IAAK,CAAAiB,QAAA,CAAEE,CAAC,CAAClB,IAAI,EAA7BmB,CAAmC,CAAC,CAAC,CACpE,CAAC,cACN5B,IAAA,UAAO6B,KAAK,CAAEzB,KAAM,CAAC0B,QAAQ,CAAEC,CAAC,EAAI1B,QAAQ,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAACI,SAAS,CAAEF,CAAC,EAAIA,CAAC,CAACG,GAAG,GAAK,OAAO,EAAIxB,WAAW,CAAC,CAAE,CAAE,CAAC,EACjH,CAAC,CAEV,CAEA,cAAe,CAAAP,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}